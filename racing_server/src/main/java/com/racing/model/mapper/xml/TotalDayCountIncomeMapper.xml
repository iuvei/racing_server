<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.racing.model.mapper.TotalDayCountIncomeMapper" >
  <resultMap id="BaseResultMap" type="com.racing.model.po.TotalDayCountIncome" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="day" property="day" jdbcType="VARCHAR" />
    <result column="stake_amount" property="stakeAmount" jdbcType="DECIMAL" />
    <result column="income_amount" property="incomeAmount" jdbcType="DECIMAL" />
    <result column="deficit_amount" property="deficitAmount" jdbcType="DECIMAL" />
    <result column="stake_count" property="stakeCount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.racing.model.po.TotalDayCountIncomeWithBLOBs" extends="BaseResultMap" >
    <result column="appoint_stake" property="appointStake" jdbcType="LONGVARCHAR" />
    <result column="common_stake" property="commonStake" jdbcType="LONGVARCHAR" />
    <result column="ranking_stake" property="rankingStake" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <update id="updateIncome">
   UPDATE total_day_count_income
SET
 stake_amount  = stake_amount + #{record.stakeAmount},
 income_amount  = income_amount + #{record.incomeAmount},
 deficit_amount  = stake_amount - income_amount,
 stake_count  = stake_count + #{record.stakeCount},
 appoint_stake = #{record.appointStake},
 common_stake = #{record.commonStake},
 ranking_stake = #{record.rankingStake}
WHERE  
day = #{record.day}
  </update>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, day, stake_amount, income_amount, deficit_amount, stake_count
  </sql>
  <sql id="Blob_Column_List" >
    appoint_stake, common_stake, ranking_stake
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.racing.model.po.TotalDayCountIncomeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from total_day_count_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.racing.model.po.TotalDayCountIncomeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from total_day_count_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from total_day_count_income
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from total_day_count_income
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.racing.model.po.TotalDayCountIncomeExample" >
    delete from total_day_count_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.racing.model.po.TotalDayCountIncomeWithBLOBs" useGeneratedKeys="true" keyProperty="id" >
    insert into total_day_count_income (id, day, stake_amount, 
      income_amount, deficit_amount, stake_count, 
      appoint_stake, common_stake, ranking_stake
      )
    values (#{id,jdbcType=INTEGER}, #{day,jdbcType=VARCHAR}, #{stakeAmount,jdbcType=DECIMAL}, 
      #{incomeAmount,jdbcType=DECIMAL}, #{deficitAmount,jdbcType=DECIMAL}, #{stakeCount,jdbcType=INTEGER}, 
      #{appointStake,jdbcType=LONGVARCHAR}, #{commonStake,jdbcType=LONGVARCHAR}, #{rankingStake,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.racing.model.po.TotalDayCountIncomeWithBLOBs" useGeneratedKeys="true" keyProperty="id" >
    insert into total_day_count_income
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="day != null" >
        day,
      </if>
      <if test="stakeAmount != null" >
        stake_amount,
      </if>
      <if test="incomeAmount != null" >
        income_amount,
      </if>
      <if test="deficitAmount != null" >
        deficit_amount,
      </if>
      <if test="stakeCount != null" >
        stake_count,
      </if>
      <if test="appointStake != null" >
        appoint_stake,
      </if>
      <if test="commonStake != null" >
        common_stake,
      </if>
      <if test="rankingStake != null" >
        ranking_stake,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="day != null" >
        #{day,jdbcType=VARCHAR},
      </if>
      <if test="stakeAmount != null" >
        #{stakeAmount,jdbcType=DECIMAL},
      </if>
      <if test="incomeAmount != null" >
        #{incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="deficitAmount != null" >
        #{deficitAmount,jdbcType=DECIMAL},
      </if>
      <if test="stakeCount != null" >
        #{stakeCount,jdbcType=INTEGER},
      </if>
      <if test="appointStake != null" >
        #{appointStake,jdbcType=LONGVARCHAR},
      </if>
      <if test="commonStake != null" >
        #{commonStake,jdbcType=LONGVARCHAR},
      </if>
      <if test="rankingStake != null" >
        #{rankingStake,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.racing.model.po.TotalDayCountIncomeExample" resultType="java.lang.Integer" >
    select count(*) from total_day_count_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update total_day_count_income
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.day != null" >
        day = #{record.day,jdbcType=VARCHAR},
      </if>
      <if test="record.stakeAmount != null" >
        stake_amount = #{record.stakeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.incomeAmount != null" >
        income_amount = #{record.incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.deficitAmount != null" >
        deficit_amount = #{record.deficitAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.stakeCount != null" >
        stake_count = #{record.stakeCount,jdbcType=INTEGER},
      </if>
      <if test="record.appointStake != null" >
        appoint_stake = #{record.appointStake,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.commonStake != null" >
        common_stake = #{record.commonStake,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rankingStake != null" >
        ranking_stake = #{record.rankingStake,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update total_day_count_income
    set id = #{record.id,jdbcType=INTEGER},
      day = #{record.day,jdbcType=VARCHAR},
      stake_amount = #{record.stakeAmount,jdbcType=DECIMAL},
      income_amount = #{record.incomeAmount,jdbcType=DECIMAL},
      deficit_amount = #{record.deficitAmount,jdbcType=DECIMAL},
      stake_count = #{record.stakeCount,jdbcType=INTEGER},
      appoint_stake = #{record.appointStake,jdbcType=LONGVARCHAR},
      common_stake = #{record.commonStake,jdbcType=LONGVARCHAR},
      ranking_stake = #{record.rankingStake,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update total_day_count_income
    set id = #{record.id,jdbcType=INTEGER},
      day = #{record.day,jdbcType=VARCHAR},
      stake_amount = #{record.stakeAmount,jdbcType=DECIMAL},
      income_amount = #{record.incomeAmount,jdbcType=DECIMAL},
      deficit_amount = #{record.deficitAmount,jdbcType=DECIMAL},
      stake_count = #{record.stakeCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.racing.model.po.TotalDayCountIncomeWithBLOBs" >
    update total_day_count_income
    <set >
      <if test="day != null" >
        day = #{day,jdbcType=VARCHAR},
      </if>
      <if test="stakeAmount != null" >
        stake_amount = #{stakeAmount,jdbcType=DECIMAL},
      </if>
      <if test="incomeAmount != null" >
        income_amount = #{incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="deficitAmount != null" >
        deficit_amount = #{deficitAmount,jdbcType=DECIMAL},
      </if>
      <if test="stakeCount != null" >
        stake_count = #{stakeCount,jdbcType=INTEGER},
      </if>
      <if test="appointStake != null" >
        appoint_stake = #{appointStake,jdbcType=LONGVARCHAR},
      </if>
      <if test="commonStake != null" >
        common_stake = #{commonStake,jdbcType=LONGVARCHAR},
      </if>
      <if test="rankingStake != null" >
        ranking_stake = #{rankingStake,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.racing.model.po.TotalDayCountIncomeWithBLOBs" >
    update total_day_count_income
    set day = #{day,jdbcType=VARCHAR},
      stake_amount = #{stakeAmount,jdbcType=DECIMAL},
      income_amount = #{incomeAmount,jdbcType=DECIMAL},
      deficit_amount = #{deficitAmount,jdbcType=DECIMAL},
      stake_count = #{stakeCount,jdbcType=INTEGER},
      appoint_stake = #{appointStake,jdbcType=LONGVARCHAR},
      common_stake = #{commonStake,jdbcType=LONGVARCHAR},
      ranking_stake = #{rankingStake,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.racing.model.po.TotalDayCountIncome" >
    update total_day_count_income
    set day = #{day,jdbcType=VARCHAR},
      stake_amount = #{stakeAmount,jdbcType=DECIMAL},
      income_amount = #{incomeAmount,jdbcType=DECIMAL},
      deficit_amount = #{deficitAmount,jdbcType=DECIMAL},
      stake_count = #{stakeCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>