<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.racing.model.mapper.TotalRacingIncomeMapper" >
  <resultMap id="BaseResultMap" type="com.racing.model.po.TotalRacingIncome" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="racing_num" property="racingNum" jdbcType="VARCHAR" />
    <result column="stake_amount" property="stakeAmount" jdbcType="DECIMAL" />
    <result column="income_amount" property="incomeAmount" jdbcType="DECIMAL" />
    <result column="deficit_amount" property="deficitAmount" jdbcType="DECIMAL" />
    <result column="stake_count" property="stakeCount" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <update id="updateIncome">
  UPDATE total_racing_income
SET
 stake_amount  = stake_amount + ${racingIncome.stakeAmount},
 income_amount  = income_amount + ${racingIncome.incomeAmount},
 deficit_amount  = stake_amount - income_amount,
 stake_count  = stake_count + ${racingIncome.stakeCount}
WHERE  
racing_num = ${racingIncome.racingNum}
  </update>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, racing_num, stake_amount, income_amount, deficit_amount, stake_count, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.racing.model.po.TotalRacingIncomeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from total_racing_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from total_racing_income
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from total_racing_income
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.racing.model.po.TotalRacingIncomeExample" >
    delete from total_racing_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.racing.model.po.TotalRacingIncome" useGeneratedKeys="true" keyProperty="id" >
    insert into total_racing_income (id, racing_num, stake_amount, 
      income_amount, deficit_amount, stake_count, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{racingNum,jdbcType=VARCHAR}, #{stakeAmount,jdbcType=DECIMAL}, 
      #{incomeAmount,jdbcType=DECIMAL}, #{deficitAmount,jdbcType=DECIMAL}, #{stakeCount,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.racing.model.po.TotalRacingIncome" useGeneratedKeys="true" keyProperty="id" >
    insert into total_racing_income
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="racingNum != null" >
        racing_num,
      </if>
      <if test="stakeAmount != null" >
        stake_amount,
      </if>
      <if test="incomeAmount != null" >
        income_amount,
      </if>
      <if test="deficitAmount != null" >
        deficit_amount,
      </if>
      <if test="stakeCount != null" >
        stake_count,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="racingNum != null" >
        #{racingNum,jdbcType=VARCHAR},
      </if>
      <if test="stakeAmount != null" >
        #{stakeAmount,jdbcType=DECIMAL},
      </if>
      <if test="incomeAmount != null" >
        #{incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="deficitAmount != null" >
        #{deficitAmount,jdbcType=DECIMAL},
      </if>
      <if test="stakeCount != null" >
        #{stakeCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.racing.model.po.TotalRacingIncomeExample" resultType="java.lang.Integer" >
    select count(*) from total_racing_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update total_racing_income
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.racingNum != null" >
        racing_num = #{record.racingNum,jdbcType=VARCHAR},
      </if>
      <if test="record.stakeAmount != null" >
        stake_amount = #{record.stakeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.incomeAmount != null" >
        income_amount = #{record.incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.deficitAmount != null" >
        deficit_amount = #{record.deficitAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.stakeCount != null" >
        stake_count = #{record.stakeCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update total_racing_income
    set id = #{record.id,jdbcType=INTEGER},
      racing_num = #{record.racingNum,jdbcType=VARCHAR},
      stake_amount = #{record.stakeAmount,jdbcType=DECIMAL},
      income_amount = #{record.incomeAmount,jdbcType=DECIMAL},
      deficit_amount = #{record.deficitAmount,jdbcType=DECIMAL},
      stake_count = #{record.stakeCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.racing.model.po.TotalRacingIncome" >
    update total_racing_income
    <set >
      <if test="racingNum != null" >
        racing_num = #{racingNum,jdbcType=VARCHAR},
      </if>
      <if test="stakeAmount != null" >
        stake_amount = #{stakeAmount,jdbcType=DECIMAL},
      </if>
      <if test="incomeAmount != null" >
        income_amount = #{incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="deficitAmount != null" >
        deficit_amount = #{deficitAmount,jdbcType=DECIMAL},
      </if>
      <if test="stakeCount != null" >
        stake_count = #{stakeCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.racing.model.po.TotalRacingIncome" >
    update total_racing_income
    set racing_num = #{racingNum,jdbcType=VARCHAR},
      stake_amount = #{stakeAmount,jdbcType=DECIMAL},
      income_amount = #{incomeAmount,jdbcType=DECIMAL},
      deficit_amount = #{deficitAmount,jdbcType=DECIMAL},
      stake_count = #{stakeCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>