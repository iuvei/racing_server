<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.racing.model.mapper.RecordResultMapper" >
  <resultMap id="BaseResultMap" type="com.racing.model.po.RecordResult" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="racing_num" property="racingNum" jdbcType="VARCHAR" />
    <result column="first" property="first" jdbcType="INTEGER" />
    <result column="second" property="second" jdbcType="INTEGER" />
    <result column="third" property="third" jdbcType="INTEGER" />
    <result column="fourth" property="fourth" jdbcType="INTEGER" />
    <result column="fifth" property="fifth" jdbcType="INTEGER" />
    <result column="sixth" property="sixth" jdbcType="INTEGER" />
    <result column="seventh" property="seventh" jdbcType="INTEGER" />
    <result column="eighth" property="eighth" jdbcType="INTEGER" />
    <result column="ninth" property="ninth" jdbcType="INTEGER" />
    <result column="tenth" property="tenth" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="first_add_second" property="firstAddSecond" jdbcType="INTEGER" />
    <result column="is_first_second_big" property="isFirstSecondBig" jdbcType="BIT" />
    <result column="is_first_second_odd" property="isFirstSecondOdd" jdbcType="BIT" />
    <result column="is_first_up" property="isFirstUp" jdbcType="BIT" />
    <result column="is_second_up" property="isSecondUp" jdbcType="BIT" />
    <result column="is_third_up" property="isThirdUp" jdbcType="BIT" />
    <result column="is_fourth_up" property="isFourthUp" jdbcType="BIT" />
    <result column="is_fifth_up" property="isFifthUp" jdbcType="BIT" />
    <result column="total_stake_amount" property="totalStakeAmount" jdbcType="DECIMAL" />
    <result column="total_deficit_amount" property="totalDeficitAmount" jdbcType="DECIMAL" />
    <result column="total_stake_count" property="totalStakeCount" jdbcType="INTEGER" />
    <result column="is_complate_calculation" property="isComplateCalculation" jdbcType="BIT" />
  </resultMap>
  
  <update id="upaddTotalStakeAmount" >
  		UPDATE record_result SET total_stake_amount = total_stake_amount + #{addTotalStakeAmount}, total_stake_count = total_stake_count + #{addTotalStakeCount} where racing_num=#{racingNum}
  </update>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, racing_num, first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, 
    tenth, start_time, first_add_second, is_first_second_big, is_first_second_odd, is_first_up, 
    is_second_up, is_third_up, is_fourth_up, is_fifth_up, total_stake_amount, total_deficit_amount, 
    total_stake_count, is_complate_calculation
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.racing.model.po.RecordResultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from record_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from record_result
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from record_result
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.racing.model.po.RecordResultExample" >
    delete from record_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.racing.model.po.RecordResult" >
    insert into record_result (id, racing_num, first, 
      second, third, fourth, 
      fifth, sixth, seventh, 
      eighth, ninth, tenth, 
      start_time, first_add_second, is_first_second_big, 
      is_first_second_odd, is_first_up, is_second_up, 
      is_third_up, is_fourth_up, is_fifth_up, 
      total_stake_amount, total_deficit_amount, total_stake_count, 
      is_complate_calculation)
    values (#{id,jdbcType=INTEGER}, #{racingNum,jdbcType=VARCHAR}, #{first,jdbcType=INTEGER}, 
      #{second,jdbcType=INTEGER}, #{third,jdbcType=INTEGER}, #{fourth,jdbcType=INTEGER}, 
      #{fifth,jdbcType=INTEGER}, #{sixth,jdbcType=INTEGER}, #{seventh,jdbcType=INTEGER}, 
      #{eighth,jdbcType=INTEGER}, #{ninth,jdbcType=INTEGER}, #{tenth,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{firstAddSecond,jdbcType=INTEGER}, #{isFirstSecondBig,jdbcType=BIT}, 
      #{isFirstSecondOdd,jdbcType=BIT}, #{isFirstUp,jdbcType=BIT}, #{isSecondUp,jdbcType=BIT}, 
      #{isThirdUp,jdbcType=BIT}, #{isFourthUp,jdbcType=BIT}, #{isFifthUp,jdbcType=BIT}, 
      #{totalStakeAmount,jdbcType=DECIMAL}, #{totalDeficitAmount,jdbcType=DECIMAL}, #{totalStakeCount,jdbcType=INTEGER}, 
      #{isComplateCalculation,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.racing.model.po.RecordResult" >
    insert into record_result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="racingNum != null" >
        racing_num,
      </if>
      <if test="first != null" >
        first,
      </if>
      <if test="second != null" >
        second,
      </if>
      <if test="third != null" >
        third,
      </if>
      <if test="fourth != null" >
        fourth,
      </if>
      <if test="fifth != null" >
        fifth,
      </if>
      <if test="sixth != null" >
        sixth,
      </if>
      <if test="seventh != null" >
        seventh,
      </if>
      <if test="eighth != null" >
        eighth,
      </if>
      <if test="ninth != null" >
        ninth,
      </if>
      <if test="tenth != null" >
        tenth,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="firstAddSecond != null" >
        first_add_second,
      </if>
      <if test="isFirstSecondBig != null" >
        is_first_second_big,
      </if>
      <if test="isFirstSecondOdd != null" >
        is_first_second_odd,
      </if>
      <if test="isFirstUp != null" >
        is_first_up,
      </if>
      <if test="isSecondUp != null" >
        is_second_up,
      </if>
      <if test="isThirdUp != null" >
        is_third_up,
      </if>
      <if test="isFourthUp != null" >
        is_fourth_up,
      </if>
      <if test="isFifthUp != null" >
        is_fifth_up,
      </if>
      <if test="totalStakeAmount != null" >
        total_stake_amount,
      </if>
      <if test="totalDeficitAmount != null" >
        total_deficit_amount,
      </if>
      <if test="totalStakeCount != null" >
        total_stake_count,
      </if>
      <if test="isComplateCalculation != null" >
        is_complate_calculation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="racingNum != null" >
        #{racingNum,jdbcType=VARCHAR},
      </if>
      <if test="first != null" >
        #{first,jdbcType=INTEGER},
      </if>
      <if test="second != null" >
        #{second,jdbcType=INTEGER},
      </if>
      <if test="third != null" >
        #{third,jdbcType=INTEGER},
      </if>
      <if test="fourth != null" >
        #{fourth,jdbcType=INTEGER},
      </if>
      <if test="fifth != null" >
        #{fifth,jdbcType=INTEGER},
      </if>
      <if test="sixth != null" >
        #{sixth,jdbcType=INTEGER},
      </if>
      <if test="seventh != null" >
        #{seventh,jdbcType=INTEGER},
      </if>
      <if test="eighth != null" >
        #{eighth,jdbcType=INTEGER},
      </if>
      <if test="ninth != null" >
        #{ninth,jdbcType=INTEGER},
      </if>
      <if test="tenth != null" >
        #{tenth,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="firstAddSecond != null" >
        #{firstAddSecond,jdbcType=INTEGER},
      </if>
      <if test="isFirstSecondBig != null" >
        #{isFirstSecondBig,jdbcType=BIT},
      </if>
      <if test="isFirstSecondOdd != null" >
        #{isFirstSecondOdd,jdbcType=BIT},
      </if>
      <if test="isFirstUp != null" >
        #{isFirstUp,jdbcType=BIT},
      </if>
      <if test="isSecondUp != null" >
        #{isSecondUp,jdbcType=BIT},
      </if>
      <if test="isThirdUp != null" >
        #{isThirdUp,jdbcType=BIT},
      </if>
      <if test="isFourthUp != null" >
        #{isFourthUp,jdbcType=BIT},
      </if>
      <if test="isFifthUp != null" >
        #{isFifthUp,jdbcType=BIT},
      </if>
      <if test="totalStakeAmount != null" >
        #{totalStakeAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalDeficitAmount != null" >
        #{totalDeficitAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalStakeCount != null" >
        #{totalStakeCount,jdbcType=INTEGER},
      </if>
      <if test="isComplateCalculation != null" >
        #{isComplateCalculation,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.racing.model.po.RecordResultExample" resultType="java.lang.Integer" >
    select count(*) from record_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update record_result
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.racingNum != null" >
        racing_num = #{record.racingNum,jdbcType=VARCHAR},
      </if>
      <if test="record.first != null" >
        first = #{record.first,jdbcType=INTEGER},
      </if>
      <if test="record.second != null" >
        second = #{record.second,jdbcType=INTEGER},
      </if>
      <if test="record.third != null" >
        third = #{record.third,jdbcType=INTEGER},
      </if>
      <if test="record.fourth != null" >
        fourth = #{record.fourth,jdbcType=INTEGER},
      </if>
      <if test="record.fifth != null" >
        fifth = #{record.fifth,jdbcType=INTEGER},
      </if>
      <if test="record.sixth != null" >
        sixth = #{record.sixth,jdbcType=INTEGER},
      </if>
      <if test="record.seventh != null" >
        seventh = #{record.seventh,jdbcType=INTEGER},
      </if>
      <if test="record.eighth != null" >
        eighth = #{record.eighth,jdbcType=INTEGER},
      </if>
      <if test="record.ninth != null" >
        ninth = #{record.ninth,jdbcType=INTEGER},
      </if>
      <if test="record.tenth != null" >
        tenth = #{record.tenth,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.firstAddSecond != null" >
        first_add_second = #{record.firstAddSecond,jdbcType=INTEGER},
      </if>
      <if test="record.isFirstSecondBig != null" >
        is_first_second_big = #{record.isFirstSecondBig,jdbcType=BIT},
      </if>
      <if test="record.isFirstSecondOdd != null" >
        is_first_second_odd = #{record.isFirstSecondOdd,jdbcType=BIT},
      </if>
      <if test="record.isFirstUp != null" >
        is_first_up = #{record.isFirstUp,jdbcType=BIT},
      </if>
      <if test="record.isSecondUp != null" >
        is_second_up = #{record.isSecondUp,jdbcType=BIT},
      </if>
      <if test="record.isThirdUp != null" >
        is_third_up = #{record.isThirdUp,jdbcType=BIT},
      </if>
      <if test="record.isFourthUp != null" >
        is_fourth_up = #{record.isFourthUp,jdbcType=BIT},
      </if>
      <if test="record.isFifthUp != null" >
        is_fifth_up = #{record.isFifthUp,jdbcType=BIT},
      </if>
      <if test="record.totalStakeAmount != null" >
        total_stake_amount = #{record.totalStakeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalDeficitAmount != null" >
        total_deficit_amount = #{record.totalDeficitAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalStakeCount != null" >
        total_stake_count = #{record.totalStakeCount,jdbcType=INTEGER},
      </if>
      <if test="record.isComplateCalculation != null" >
        is_complate_calculation = #{record.isComplateCalculation,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update record_result
    set id = #{record.id,jdbcType=INTEGER},
      racing_num = #{record.racingNum,jdbcType=VARCHAR},
      first = #{record.first,jdbcType=INTEGER},
      second = #{record.second,jdbcType=INTEGER},
      third = #{record.third,jdbcType=INTEGER},
      fourth = #{record.fourth,jdbcType=INTEGER},
      fifth = #{record.fifth,jdbcType=INTEGER},
      sixth = #{record.sixth,jdbcType=INTEGER},
      seventh = #{record.seventh,jdbcType=INTEGER},
      eighth = #{record.eighth,jdbcType=INTEGER},
      ninth = #{record.ninth,jdbcType=INTEGER},
      tenth = #{record.tenth,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      first_add_second = #{record.firstAddSecond,jdbcType=INTEGER},
      is_first_second_big = #{record.isFirstSecondBig,jdbcType=BIT},
      is_first_second_odd = #{record.isFirstSecondOdd,jdbcType=BIT},
      is_first_up = #{record.isFirstUp,jdbcType=BIT},
      is_second_up = #{record.isSecondUp,jdbcType=BIT},
      is_third_up = #{record.isThirdUp,jdbcType=BIT},
      is_fourth_up = #{record.isFourthUp,jdbcType=BIT},
      is_fifth_up = #{record.isFifthUp,jdbcType=BIT},
      total_stake_amount = #{record.totalStakeAmount,jdbcType=DECIMAL},
      total_deficit_amount = #{record.totalDeficitAmount,jdbcType=DECIMAL},
      total_stake_count = #{record.totalStakeCount,jdbcType=INTEGER},
      is_complate_calculation = #{record.isComplateCalculation,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.racing.model.po.RecordResult" >
    update record_result
    <set >
      <if test="racingNum != null" >
        racing_num = #{racingNum,jdbcType=VARCHAR},
      </if>
      <if test="first != null" >
        first = #{first,jdbcType=INTEGER},
      </if>
      <if test="second != null" >
        second = #{second,jdbcType=INTEGER},
      </if>
      <if test="third != null" >
        third = #{third,jdbcType=INTEGER},
      </if>
      <if test="fourth != null" >
        fourth = #{fourth,jdbcType=INTEGER},
      </if>
      <if test="fifth != null" >
        fifth = #{fifth,jdbcType=INTEGER},
      </if>
      <if test="sixth != null" >
        sixth = #{sixth,jdbcType=INTEGER},
      </if>
      <if test="seventh != null" >
        seventh = #{seventh,jdbcType=INTEGER},
      </if>
      <if test="eighth != null" >
        eighth = #{eighth,jdbcType=INTEGER},
      </if>
      <if test="ninth != null" >
        ninth = #{ninth,jdbcType=INTEGER},
      </if>
      <if test="tenth != null" >
        tenth = #{tenth,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="firstAddSecond != null" >
        first_add_second = #{firstAddSecond,jdbcType=INTEGER},
      </if>
      <if test="isFirstSecondBig != null" >
        is_first_second_big = #{isFirstSecondBig,jdbcType=BIT},
      </if>
      <if test="isFirstSecondOdd != null" >
        is_first_second_odd = #{isFirstSecondOdd,jdbcType=BIT},
      </if>
      <if test="isFirstUp != null" >
        is_first_up = #{isFirstUp,jdbcType=BIT},
      </if>
      <if test="isSecondUp != null" >
        is_second_up = #{isSecondUp,jdbcType=BIT},
      </if>
      <if test="isThirdUp != null" >
        is_third_up = #{isThirdUp,jdbcType=BIT},
      </if>
      <if test="isFourthUp != null" >
        is_fourth_up = #{isFourthUp,jdbcType=BIT},
      </if>
      <if test="isFifthUp != null" >
        is_fifth_up = #{isFifthUp,jdbcType=BIT},
      </if>
      <if test="totalStakeAmount != null" >
        total_stake_amount = #{totalStakeAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalDeficitAmount != null" >
        total_deficit_amount = #{totalDeficitAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalStakeCount != null" >
        total_stake_count = #{totalStakeCount,jdbcType=INTEGER},
      </if>
      <if test="isComplateCalculation != null" >
        is_complate_calculation = #{isComplateCalculation,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.racing.model.po.RecordResult" >
    update record_result
    set racing_num = #{racingNum,jdbcType=VARCHAR},
      first = #{first,jdbcType=INTEGER},
      second = #{second,jdbcType=INTEGER},
      third = #{third,jdbcType=INTEGER},
      fourth = #{fourth,jdbcType=INTEGER},
      fifth = #{fifth,jdbcType=INTEGER},
      sixth = #{sixth,jdbcType=INTEGER},
      seventh = #{seventh,jdbcType=INTEGER},
      eighth = #{eighth,jdbcType=INTEGER},
      ninth = #{ninth,jdbcType=INTEGER},
      tenth = #{tenth,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      first_add_second = #{firstAddSecond,jdbcType=INTEGER},
      is_first_second_big = #{isFirstSecondBig,jdbcType=BIT},
      is_first_second_odd = #{isFirstSecondOdd,jdbcType=BIT},
      is_first_up = #{isFirstUp,jdbcType=BIT},
      is_second_up = #{isSecondUp,jdbcType=BIT},
      is_third_up = #{isThirdUp,jdbcType=BIT},
      is_fourth_up = #{isFourthUp,jdbcType=BIT},
      is_fifth_up = #{isFifthUp,jdbcType=BIT},
      total_stake_amount = #{totalStakeAmount,jdbcType=DECIMAL},
      total_deficit_amount = #{totalDeficitAmount,jdbcType=DECIMAL},
      total_stake_count = #{totalStakeCount,jdbcType=INTEGER},
      is_complate_calculation = #{isComplateCalculation,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>